using OpenTK.Graphics.OpenGL;

namespace GameOpenGL;

public static class BitmapText
{
    private const int W = 5, H = 7;
    
    private static readonly Dictionary<char, string[]> Glyph = new()
    {
        ['A'] = new[] { "  #  ", " # # ", "#   #", "#####", "#   #", "#   #", "#   #" },
        ['B'] = new[] { "#### ", "#   #", "#### ", "#   #", "#   #", "#   #", "#### " },
        ['C'] = new[] { " ### ", "#   #", "#    ", "#    ", "#    ", "#   #", " ### " },
        ['D'] = new[] { "#### ", "#   #", "#   #", "#   #", "#   #", "#   #", "#### " },
        ['E'] = new[] { "#####", "#    ", "#### ", "#    ", "#    ", "#    ", "#####" },
        ['F'] = new[] { "#####", "#    ", "#### ", "#    ", "#    ", "#    ", "#    " },
        ['G'] = new[] { " ### ", "#   #", "#    ", "#  ##", "#   #", "#   #", " ### " },
        ['H'] = new[] { "#   #", "#   #", "#   #", "#####", "#   #", "#   #", "#   #" },
        ['I'] = new[] { " ### ", "  #  ", "  #  ", "  #  ", "  #  ", "  #  ", " ### " },
        ['J'] = new[] { "  ###", "   # ", "   # ", "   # ", "   # ", "#  # ", " ##  " },
        ['K'] = new[] { "#   #", "#  # ", "# #  ", "##   ", "# #  ", "#  # ", "#   #" },
        ['L'] = new[] { "#    ", "#    ", "#    ", "#    ", "#    ", "#    ", "#####" },
        ['M'] = new[] { "#   #", "## ##", "# # #", "#   #", "#   #", "#   #", "#   #" },
        ['N'] = new[] { "#   #", "##  #", "# # #", "#  ##", "#   #", "#   #", "#   #" },
        ['O'] = new[] { " ### ", "#   #", "#   #", "#   #", "#   #", "#   #", " ### " },
        ['P'] = new[] { "#### ", "#   #", "#   #", "#### ", "#    ", "#    ", "#    " },
        ['Q'] = new[] { " ### ", "#   #", "#   #", "#   #", "# # #", "#  # ", " ## #" },
        ['R'] = new[] { "#### ", "#   #", "#   #", "#### ", "# #  ", "#  # ", "#   #" },
        ['S'] = new[] { " ####", "#    ", "#    ", " ### ", "    #", "    #", "#### " },
        ['T'] = new[] { "#####", "  #  ", "  #  ", "  #  ", "  #  ", "  #  ", "  #  " },
        ['U'] = new[] { "#   #", "#   #", "#   #", "#   #", "#   #", "#   #", " ### " },
        ['V'] = new[] { "#   #", "#   #", "#   #", "#   #", "#   #", " # # ", "  #  " },
        ['W'] = new[] { "#   #", "#   #", "#   #", "# # #", "# # #", "# # #", " # # " },
        ['X'] = new[] { "#   #", "#   #", " # # ", "  #  ", " # # ", "#   #", "#   #" },
        ['Y'] = new[] { "#   #", "#   #", " # # ", "  #  ", "  #  ", "  #  ", "  #  " },
        ['Z'] = new[] { "#####", "    #", "   # ", "  #  ", " #   ", "#    ", "#####" },
        ['0'] = new[] { " ### ", "#   #", "#  ##", "# # #", "##  #", "#   #", " ### " },
        ['1'] = new[] { "  #  ", " ##  ", "# #  ", "  #  ", "  #  ", "  #  ", "#####" },
        ['2'] = new[] { " ### ", "#   #", "    #", "   # ", "  #  ", " #   ", "#####" },
        ['3'] = new[] { " ### ", "#   #", "    #", "  ## ", "    #", "#   #", " ### " },
        ['4'] = new[] { "   # ", "  ## ", " # # ", "#  # ", "#####", "   # ", "   # " },
        ['5'] = new[] { "#####", "#    ", "#### ", "    #", "    #", "#   #", " ### " },
        ['6'] = new[] { " ### ", "#   #", "#    ", "#### ", "#   #", "#   #", " ### " },
        ['7'] = new[] { "#####", "    #", "   # ", "  #  ", " #   ", " #   ", " #   " },
        ['8'] = new[] { " ### ", "#   #", "#   #", " ### ", "#   #", "#   #", " ### " },
        ['9'] = new[] { " ### ", "#   #", "#   #", " ####", "    #", "#   #", " ### " },
        [':'] = new[] { "     ", "  #  ", "     ", "     ", "  #  ", "     ", "     " },
        [' '] = new[] { "     ", "     ", "     ", "     ", "     ", "     ", "     " }
    };


    public static void Draw(string text, float x, float y, float size)
    {
        float sx = size, sy = size * H / W;
        float ox = x;
        GL.Begin(PrimitiveType.Quads);
        foreach (char ch in text.ToUpperInvariant())
        {
            if (ch == '\n')
            {
                y -= sy * 1.2f;
                x = ox;
                continue;
            }

            if (!Glyph.TryGetValue(ch, out var g))
            {
                x += sx;
                continue;
            }

            for (int row = 0; row < H; row++)
            for (int col = 0; col < W; col++)
                if (g[row][col] == '#')
                {
                    float px = x + col * sx / W;
                    float py = y - row * sy / H;
                    GL.Vertex2(px, py);
                    GL.Vertex2(px + sx / W, py);
                    GL.Vertex2(px + sx / W, py - sy / H);
                    GL.Vertex2(px, py - sy / H);
                }

            x += sx * 1.1f;
        }

        GL.End();
    }
}